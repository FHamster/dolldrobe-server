<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fhamster.dolldrobe.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fhamster.dolldrobe.model.User" >
    <constructor >
      <idArg column="U_AccountNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="I_Id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_QQ" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_WX" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fhamster.dolldrobe.model.User" >
    <constructor >
      <idArg column="U_AccountNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="I_Id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_Email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_QQ" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_WX" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="U_PicUrl" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    U_AccountNumber, I_Id, U_Name, U_Password, U_Sex, U_Email, U_QQ, U_WX
  </sql>
  <sql id="Blob_Column_List" >
    U_PicUrl
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.fhamster.dolldrobe.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fhamster.dolldrobe.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where U_AccountNumber = #{uAccountnumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where U_AccountNumber = #{uAccountnumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fhamster.dolldrobe.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fhamster.dolldrobe.model.User" >
    insert into user (U_AccountNumber, I_Id, U_Name, 
      U_Password, U_Sex, U_Email, 
      U_QQ, U_WX, U_PicUrl
      )
    values (#{uAccountnumber,jdbcType=VARCHAR}, #{iId,jdbcType=VARCHAR}, #{uName,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{uSex,jdbcType=VARCHAR}, #{uEmail,jdbcType=VARCHAR}, 
      #{uQq,jdbcType=VARCHAR}, #{uWx,jdbcType=VARCHAR}, #{uPicurl,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fhamster.dolldrobe.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uAccountnumber != null" >
        U_AccountNumber,
      </if>
      <if test="iId != null" >
        I_Id,
      </if>
      <if test="uName != null" >
        U_Name,
      </if>
      <if test="uPassword != null" >
        U_Password,
      </if>
      <if test="uSex != null" >
        U_Sex,
      </if>
      <if test="uEmail != null" >
        U_Email,
      </if>
      <if test="uQq != null" >
        U_QQ,
      </if>
      <if test="uWx != null" >
        U_WX,
      </if>
      <if test="uPicurl != null" >
        U_PicUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uAccountnumber != null" >
        #{uAccountnumber,jdbcType=VARCHAR},
      </if>
      <if test="iId != null" >
        #{iId,jdbcType=VARCHAR},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uSex != null" >
        #{uSex,jdbcType=VARCHAR},
      </if>
      <if test="uEmail != null" >
        #{uEmail,jdbcType=VARCHAR},
      </if>
      <if test="uQq != null" >
        #{uQq,jdbcType=VARCHAR},
      </if>
      <if test="uWx != null" >
        #{uWx,jdbcType=VARCHAR},
      </if>
      <if test="uPicurl != null" >
        #{uPicurl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fhamster.dolldrobe.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uAccountnumber != null" >
        U_AccountNumber = #{record.uAccountnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.iId != null" >
        I_Id = #{record.iId,jdbcType=VARCHAR},
      </if>
      <if test="record.uName != null" >
        U_Name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.uPassword != null" >
        U_Password = #{record.uPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.uSex != null" >
        U_Sex = #{record.uSex,jdbcType=VARCHAR},
      </if>
      <if test="record.uEmail != null" >
        U_Email = #{record.uEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.uQq != null" >
        U_QQ = #{record.uQq,jdbcType=VARCHAR},
      </if>
      <if test="record.uWx != null" >
        U_WX = #{record.uWx,jdbcType=VARCHAR},
      </if>
      <if test="record.uPicurl != null" >
        U_PicUrl = #{record.uPicurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set U_AccountNumber = #{record.uAccountnumber,jdbcType=VARCHAR},
      I_Id = #{record.iId,jdbcType=VARCHAR},
      U_Name = #{record.uName,jdbcType=VARCHAR},
      U_Password = #{record.uPassword,jdbcType=VARCHAR},
      U_Sex = #{record.uSex,jdbcType=VARCHAR},
      U_Email = #{record.uEmail,jdbcType=VARCHAR},
      U_QQ = #{record.uQq,jdbcType=VARCHAR},
      U_WX = #{record.uWx,jdbcType=VARCHAR},
      U_PicUrl = #{record.uPicurl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set U_AccountNumber = #{record.uAccountnumber,jdbcType=VARCHAR},
      I_Id = #{record.iId,jdbcType=VARCHAR},
      U_Name = #{record.uName,jdbcType=VARCHAR},
      U_Password = #{record.uPassword,jdbcType=VARCHAR},
      U_Sex = #{record.uSex,jdbcType=VARCHAR},
      U_Email = #{record.uEmail,jdbcType=VARCHAR},
      U_QQ = #{record.uQq,jdbcType=VARCHAR},
      U_WX = #{record.uWx,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fhamster.dolldrobe.model.User" >
    update user
    <set >
      <if test="iId != null" >
        I_Id = #{iId,jdbcType=VARCHAR},
      </if>
      <if test="uName != null" >
        U_Name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        U_Password = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uSex != null" >
        U_Sex = #{uSex,jdbcType=VARCHAR},
      </if>
      <if test="uEmail != null" >
        U_Email = #{uEmail,jdbcType=VARCHAR},
      </if>
      <if test="uQq != null" >
        U_QQ = #{uQq,jdbcType=VARCHAR},
      </if>
      <if test="uWx != null" >
        U_WX = #{uWx,jdbcType=VARCHAR},
      </if>
      <if test="uPicurl != null" >
        U_PicUrl = #{uPicurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where U_AccountNumber = #{uAccountnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fhamster.dolldrobe.model.User" >
    update user
    set I_Id = #{iId,jdbcType=VARCHAR},
      U_Name = #{uName,jdbcType=VARCHAR},
      U_Password = #{uPassword,jdbcType=VARCHAR},
      U_Sex = #{uSex,jdbcType=VARCHAR},
      U_Email = #{uEmail,jdbcType=VARCHAR},
      U_QQ = #{uQq,jdbcType=VARCHAR},
      U_WX = #{uWx,jdbcType=VARCHAR},
      U_PicUrl = #{uPicurl,jdbcType=LONGVARCHAR}
    where U_AccountNumber = #{uAccountnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fhamster.dolldrobe.model.User" >
    update user
    set I_Id = #{iId,jdbcType=VARCHAR},
      U_Name = #{uName,jdbcType=VARCHAR},
      U_Password = #{uPassword,jdbcType=VARCHAR},
      U_Sex = #{uSex,jdbcType=VARCHAR},
      U_Email = #{uEmail,jdbcType=VARCHAR},
      U_QQ = #{uQq,jdbcType=VARCHAR},
      U_WX = #{uWx,jdbcType=VARCHAR}
    where U_AccountNumber = #{uAccountnumber,jdbcType=VARCHAR}
  </update>
</mapper>